stages: [build, test, docs, deploy]

build:
  stage: build
  script:
    - mkdir -p build
    - g++ -std=c++17 -O2 -o build/app main.cpp
  artifacts:
    paths: [build/app]

test:
  stage: test
  needs: [build]
  script:
    - ./build/app

docs_html:
  stage: docs
  image: debian:bookworm
  script:
    - apt-get update && apt-get install -y doxygen graphviz
    - doxygen Doxyfile
  artifacts:
    paths: [html/]
    expire_in: 1 week

docs_pdf:
  stage: docs
  image: debian:bookworm
  script:
    - apt-get update && apt-get install -y doxygen graphviz make texlive-latex-base texlive-latex-recommended texlive-latex-extra texlive-fonts-recommended
    - doxygen Doxyfile
    - cd latex && make && cp refman.pdf ../documentation.pdf
  artifacts:
    paths: [documentation.pdf]
    expire_in: 1 week

deploy_staging:
  stage: deploy
  needs: ["build"]
  environment:
    name: staging
  rules:
    - if: '$CI_COMMIT_BRANCH != "main"'
  script:
    - echo "Deploying to staging..."
    - mkdir -p deployed
    - cp build/app deployed/
  artifacts:
    paths: [deployed/]
    expire_in: 1 week

deploy_production:
  stage: deploy
  needs: ["build"]
  environment:
    name: production
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  when: manual
  script:
    - echo "Deploying to production..."
    - mkdir -p deployed
    - cp build/app deployed/
    - echo "Deployed successfully!"
  artifacts:
    paths: [deployed/]
    expire_in: 1 week
  
  
